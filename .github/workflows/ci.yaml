name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 0 * * *" # Daily “At 00:00”
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.7", "3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/environment.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Cache conda
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/**.yml') }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: npg-tests
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Cache conda env
        id: cache-env
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda/envs/
          key: ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/**.yml') }}

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE
        if: steps.cache-env.outputs.cache-hit != 'true'

      - name: Set up conda environment
        shell: bash -l {0}
        run: |
          python -m pip install -e .
          conda list

      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest
